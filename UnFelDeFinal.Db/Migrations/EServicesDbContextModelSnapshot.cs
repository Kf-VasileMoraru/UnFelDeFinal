// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UnFelDeFinal.Db;

namespace UnFelDeFinal.Db.Migrations
{
    [DbContext(typeof(EServicesDbContext))]
    partial class EServicesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UnFelDeFinal.Domain.CityHall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BanckAccount")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("CityHalls");

                    b.HasCheckConstraint("CK_CityHall_Name", "Name Like '%___%'");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BanckAccount = "BanckAccount1",
                            Name = "Ciorescu"
                        },
                        new
                        {
                            Id = 2,
                            BanckAccount = "BanckAccount2",
                            Name = "Bacioi"
                        },
                        new
                        {
                            Id = 3,
                            BanckAccount = "BanckAccount3",
                            Name = "Bubuieci"
                        },
                        new
                        {
                            Id = 4,
                            BanckAccount = "BanckAccount4",
                            Name = "Budesti"
                        });
                });

            modelBuilder.Entity("UnFelDeFinal.Domain.Eservice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("SMALLMONEY");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("TreasureAccount")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.HasAlternateKey("TreasureAccount");

                    b.ToTable("Eservices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 20.52m,
                            Name = "test 1 service ",
                            TreasureAccount = "Treasure1"
                        },
                        new
                        {
                            Id = 2,
                            Amount = 12.22m,
                            Name = "test 2 service ",
                            TreasureAccount = "Treasure2"
                        },
                        new
                        {
                            Id = 3,
                            Amount = 22.12m,
                            Name = "test 3 service ",
                            TreasureAccount = "Treasure3"
                        },
                        new
                        {
                            Id = 4,
                            Amount = 2.52m,
                            Name = "test 4 service ",
                            TreasureAccount = "Treasure4"
                        },
                        new
                        {
                            Id = 5,
                            Amount = 44.42m,
                            Name = "test 5 service ",
                            TreasureAccount = "Treasure5"
                        });
                });

            modelBuilder.Entity("UnFelDeFinal.Domain.Iban", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CityHallId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("char(24)");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityHallId");

                    b.HasIndex("ServiceId");

                    b.ToTable("Ibans");

                    b.HasCheckConstraint("CQ_Iban_Name", "Name Like 'MD______________________'");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityHallId = 1,
                            Name = "MD_____________________1",
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 2,
                            CityHallId = 2,
                            Name = "MD_____________________2",
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 3,
                            CityHallId = 3,
                            Name = "MD_____________________3",
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 4,
                            CityHallId = 4,
                            Name = "MD_____________________4",
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 5,
                            CityHallId = 1,
                            Name = "MD_____________________5",
                            ServiceId = 2
                        },
                        new
                        {
                            Id = 6,
                            CityHallId = 2,
                            Name = "MD_____________________6",
                            ServiceId = 2
                        });
                });

            modelBuilder.Entity("UnFelDeFinal.Domain.PayerInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("SMALLMONEY");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Idnx")
                        .IsRequired()
                        .HasColumnType("char(13)");

                    b.Property<string>("PayerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("PayerType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PayerInfo");

                    b.HasCheckConstraint("CK_PayerInfo_Amount", "Amount Like '%[0-9]%'");

                    b.HasCheckConstraint("CK_PayerInfo_Idnx", "Idnx Like '[012]____________'");

                    b.HasCheckConstraint("CK_PayerInfo_PayerName", "PayerName Like '%_____%'");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 20.2m,
                            DataTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Idnx = "0123456789012",
                            PayerName = "payer name 1",
                            PayerType = 0
                        },
                        new
                        {
                            Id = 2,
                            Amount = 10.2m,
                            DataTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Idnx = "0123456789013",
                            PayerName = "payer name 2",
                            PayerType = 1
                        });
                });

            modelBuilder.Entity("UnFelDeFinal.Domain.ServiceList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CityHallId")
                        .HasColumnType("int");

                    b.Property<int>("IbanId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPayed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("IsPayedDataTime")
                        .HasColumnType("SMALLDATETIME");

                    b.Property<int?>("PayerInfoId")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityHallId");

                    b.HasIndex("IbanId");

                    b.HasIndex("PayerInfoId");

                    b.HasIndex("ServiceId");

                    b.ToTable("ServiceList");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityHallId = 1,
                            IbanId = 1,
                            IsPayed = false,
                            PayerInfoId = 1,
                            ServiceId = 1
                        },
                        new
                        {
                            Id = 2,
                            CityHallId = 2,
                            IbanId = 2,
                            IsPayed = false,
                            PayerInfoId = 1,
                            ServiceId = 2
                        });
                });

            modelBuilder.Entity("UnFelDeFinal.Domain.Iban", b =>
                {
                    b.HasOne("UnFelDeFinal.Domain.CityHall", "CityHall")
                        .WithMany("Iban")
                        .HasForeignKey("CityHallId");

                    b.HasOne("UnFelDeFinal.Domain.Eservice", "Service")
                        .WithMany("Iban")
                        .HasForeignKey("ServiceId");
                });

            modelBuilder.Entity("UnFelDeFinal.Domain.ServiceList", b =>
                {
                    b.HasOne("UnFelDeFinal.Domain.CityHall", "CityHall")
                        .WithMany("ServiceLists")
                        .HasForeignKey("CityHallId");

                    b.HasOne("UnFelDeFinal.Domain.Iban", "Iban")
                        .WithMany("ServiceLists")
                        .HasForeignKey("IbanId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("UnFelDeFinal.Domain.PayerInfo", "PayerInfo")
                        .WithMany("ServiceLists")
                        .HasForeignKey("PayerInfoId");

                    b.HasOne("UnFelDeFinal.Domain.Eservice", "Service")
                        .WithMany("ServiceLists")
                        .HasForeignKey("ServiceId");
                });
#pragma warning restore 612, 618
        }
    }
}
